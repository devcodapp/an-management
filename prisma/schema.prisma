// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Additional {
  id          String                  @id @map("_id")
  name        String
  price       Float
  imageUrl    String
  imageId     String
  categoryId  String
  createdUser String
  createdAt   DateTime                @default(now())
  deletedUser String?
  deletedAt   DateTime?
  category    CategoryAdditional      @relation(name: "AdditionalToCategoryAdditional", fields: [categoryId], references: [id])
  products    AdditionalsOnProducts[] @relation(name: "AdditionalToAdditionalsOnProducts")
}

model CategoryAdditional {
  id          String       @id @map("_id")
  Additional  Additional[] @relation(name: "AdditionalToCategoryAdditional")
  name        String
  order       Int
  companyId   String
  createdUser String
  createdAt   DateTime     @default(now())
  deletedUser String?
  deletedAt   DateTime?
  company     Company      @relation(name: "CategoryAdditionalToCompany", fields: [companyId], references: [id])
}

model Company {
  id                 String               @id @map("_id")
  CategoryAdditional CategoryAdditional[] @relation(name: "CategoryAdditionalToCompany")
  CategoryProduct    CategoryProduct[]    @relation(name: "CategoryProductToCompany")
  name               String
  description        String
  tags               String[]
  type               String
  address            Json?
  isOpened           Boolean              @default(false)
  openAt             String?
  closeAt            String?
  imageId            String?
  imageUrl           String?
  createdAt          DateTime             @default(now())
  disabledAt         DateTime?
}

model CategoryProduct {
  id          String    @id @map("_id")
  name        String
  description String
  order       Int
  imageId     String
  imageUrl    String
  createdUser String
  createdAt   DateTime  @default(now())
  deletedUser String?
  deletedAt   DateTime?
  Company     Company   @relation(name: "CategoryProductToCompany", fields: [companyId], references: [id])
  companyId   String
  Product     Product[] @relation(name: "CategoryProductToProduct")
}

model Product {
  id          String                  @id @map("_id")
  name        String
  description String
  price       Float
  images      Json[]
  additionals AdditionalsOnProducts[] @relation(name: "AdditionalsOnProductsToProduct")
  createdUser String
  createdAt   DateTime                @default(now())
  deletedUser String?
  deletedAt   DateTime?
  disabledAt  DateTime?
  categoryId  String
  category    CategoryProduct         @relation(name: "CategoryProductToProduct", fields: [categoryId], references: [id])
}

model AdditionalsOnProducts {
  id            String     @id @map("_id")
  product_id    String
  additional_id String
  additional    Additional @relation(name: "AdditionalToAdditionalsOnProducts", fields: [additional_id], references: [id])
  product       Product    @relation(name: "AdditionalsOnProductsToProduct", fields: [product_id], references: [id])
}
